package week1;

import java.util.Arrays;
import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Scanner;
/*
 * 빨리 끝나는 강의부터 배정한다.
 * */
public class Baekjoon11000 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
        int[][] lectures = new int[N][2]; // 강의정보 객체를 저장하는 배열

        for (int i = 0; i < N; i++) {
            lectures[i] = new int[] {sc.nextInt(), sc.nextInt()};
        }
        
        Arrays.sort(lectures, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                return o1[0]-o2[0];
            }
        }); // 시작시간 기준 오름차순

        PriorityQueue<Integer> queue = new PriorityQueue<>(); // 끝나는 시간 최소 힙
        queue.add(lectures[0][1]);

        for (int i = 1; i < N; i++) {
        	// 가장 빨리 끝나는 강의가 다음 강의 시작시간보다 작으면(같은 강의실에 넣을 수 있으면) pop
            if (lectures[i][0] >= queue.peek()) { 
                queue.poll();
            }
            queue.add(lectures[i][1]); // 큐에 들어있는 강의 개수가 강의실 개수로 유지됨.
        }

        System.out.println(queue.size());
    }
}
